---
interface Props {
  id: number
  position: string
  company: string
  description: string
  contact?: string
  period: string
  visible: boolean
  created_at: string
  updated_at: string
}

// Desestructurar todas las propiedades, incluidas las nuevas de Supabase
const { position, company, description, contact, period, visible = true } = Astro.props;

// No renderizar si no es visible (aunque ya filtramos en la consulta principal)
if (!visible) return null;
---

<div
  class="relative mx-12 pb-12 grid before:absolute before:left-[-35px] before:block before:h-full before:border-l-2 before:border-black/20 dark:before:border-white/15 before:content-[''] md:grid-cols-5 md:gap-10 md:space-x-4]"
>
  <div class="relative pb-12 md:col-span-2">
    <div class="sticky top-0">
      <span class="text-yellow-400 -left-[42px] absolute rounded-full text-5xl"
        >&bull;</span
      >

      <h3 class="text-xl font-bold text-yellow-400">{position}</h3>
      <h4 class="font-semibold text-xl text-gray-600 dark:text-white">{company}</h4>
      <time class="p-0 m-0 text-sm text-gray-600/80 dark:text-white/80">{period}</time>
    </div>
  </div>
  
  <div class="relative flex flex-col gap-2 pb-4 text-gray-600 dark:text-gray-300 md:col-span-3">
    {description}
    {
      contact && (
        <div class="mt-2 flex items-center gap-2">
          <svg
              xmlns="http://www.w3.org/2000/svg"
              width="25"
              height="25"
              viewBox="0 0 24 24"
              fill="none"
              stroke="#51a2ff"
              stroke-width="1.25"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="flex-shrink-0"
              >
              <path d="M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z" />
              <path d="M3 7l9 6l9 -6" />
          </svg>
          <span class="text-blue-600 dark:text-blue-400 hover:underline">
            {contact}
          </span>
        </div>
      )
    }
  </div>
</div>